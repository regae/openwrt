From 6e9481166703ebb49ccbf5a9c85ff6af056e7497 Mon Sep 17 00:00:00 2001
From: Tian Yang <tiany@codeaurora.org>
Date: Mon, 28 Sep 2015 16:26:53 -0500
Subject: [PATCH] skbuff_debug: print warning when free'ing twice

Previously we would only print a message when we allocated
the same SKB twice (e.g. gave an SKB with the same address)
to two different subsytems.

This will print an warning a little earlier, however it may
not be in invalid code, it could still very well be a victim

Change-Id: I05a88d828546a4a0ef3c95b829b5d6b5be3a9db4
Signed-off-by: Matthew McClintock <mmcclint@codeaurora.org>
Signed-off-by: Casey Chen <kexinc@codeaurora.org>
---
 net/core/skbuff_debug.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

--- a/net/core/skbuff_debug.c
+++ b/net/core/skbuff_debug.c
@@ -55,7 +55,15 @@ inline void skbuff_debugobj_activate(str
 
 inline void skbuff_debugobj_deactivate(struct sk_buff *skb)
 {
-	debug_object_deactivate(skb, &skbuff_debug_descr);
+	int obj_state = debug_object_get_state(skb);
+
+	if (obj_state == ODEBUG_STATE_ACTIVE) {
+		debug_object_deactivate(skb, &skbuff_debug_descr);
+		return;
+	}
+
+	WARN(1, "skbuff_debug: deactivating inactive object skb 0x%p state=%d\n",
+	     skb, obj_state);
 }
 
 inline void skbuff_debugobj_destroy(struct sk_buff *skb)
