From 07d68c16464a2c8b4384b1c0ba1ba56227b0fb15 Mon Sep 17 00:00:00 2001
From: Vivek Natarajan <nataraja@codeaurora.org>
Date: Thu, 8 Oct 2015 12:57:51 +0530
Subject: [PATCH] Support preallocation of skbs

This patch preallocates SKBs each of 4K size in recycling lists.
The number of SKBs are configured through
CONFIG_SKB_RECYCLE_MAX_PREALLOC_SKBS.

Change-Id: I581813dfb298da2844aca86bebf9d80399d629ed
Signed-off-by: Vivek Natarajan <nataraja@codeaurora.org>
Signed-off-by: Casey Chen <kexinc@codeaurora.org>
---
 net/Kconfig               | 18 ++++++++++++++++++
 net/core/skbuff_recycle.c | 25 +++++++++++++++++++++++++
 net/core/skbuff_recycle.h | 13 +++++++++++--
 3 files changed, 54 insertions(+), 2 deletions(-)

--- a/net/Kconfig
+++ b/net/Kconfig
@@ -347,6 +347,24 @@ config SKB_RECYCLER_MULTI_CPU
 	depends on SMP && SKB_RECYCLER
 	default n
 
+config SKB_RECYCLER_PREALLOC
+	bool "Enable preallocation of SKBs"
+	depends on SKB_RECYCLER
+	default n
+	help
+	 Preallocates SKBs in recycling lists and the number of
+	 SKBs are configured through CONFIG_SKB_RECYCLE_MAX_PREALLOC_SKBS.
+	 This needs SKB_RECYCLER to be enabled.
+	 The number of preallocated SKBs can be passed using
+	 SKB_RECYCLE_MAX_PREALLOC_SKBS.
+
+config SKB_RECYCLE_MAX_PREALLOC_SKBS
+	int "Number of SKBs to be preallocated"
+	depends on SKB_RECYCLER_PREALLOC
+	default 16384
+	help
+	 Number of SKBs each of 4K size to be preallocated for recycling
+
 menu "Network testing"
 
 config NET_PKTGEN
--- a/net/core/skbuff_recycle.c
+++ b/net/core/skbuff_recycle.c
@@ -251,6 +251,26 @@ static int skb_cpu_callback(unsigned int
 	return NOTIFY_OK;
 }
 
+#ifdef CONFIG_SKB_RECYCLER_PREALLOC
+static int __init skb_prealloc_init_list(void)
+{
+	int i;
+	struct sk_buff *skb;
+
+	for (i = 0; i < SKB_RECYCLE_MAX_PREALLOC_SKBS; i++) {
+		skb = __alloc_skb(SKB_RECYCLE_MAX_SIZE + NET_SKB_PAD,
+				  GFP_KERNEL, 0, NUMA_NO_NODE);
+		if (unlikely(!skb))
+			return -ENOMEM;
+
+		skb_reserve(skb, NET_SKB_PAD);
+
+		skb_recycler_consume(skb);
+	}
+	return 0;
+}
+#endif
+
 /* procfs: count
  * Show skb counts
  */
@@ -504,6 +524,11 @@ void __init skb_recycler_init(void)
 	glob_recycler.head = 0;
 	glob_recycler.tail = 0;
 #endif
+
+#ifdef CONFIG_SKB_RECYCLER_PREALLOC
+	if (skb_prealloc_init_list())
+		pr_err("Failed to preallocate SKBs for recycle list\n");
+#endif
 	cpuhp_setup_state_nocalls(CPUHP_NET_DEV_DEAD, "net/skbuff_recycler:dead:",NULL, skb_cpu_callback);
 	skb_recycler_init_procfs();
 }
--- a/net/core/skbuff_recycle.h
+++ b/net/core/skbuff_recycle.h
@@ -46,8 +46,17 @@
 #define SKB_RECYCLE_MAX_SKBS	1024
 
 #define SKB_RECYCLE_SPARE_MAX_SKBS		256
-#define SKB_RECYCLE_MAX_SHARED_POOLS		8
-#define SKB_RECYCLE_MAX_SHARED_POOLS_MASK	\
+
+#ifdef CONFIG_SKB_RECYCLER_PREALLOC
+#define SKB_RECYCLE_MAX_PREALLOC_SKBS CONFIG_SKB_RECYCLE_MAX_PREALLOC_SKBS
+#define SKB_RECYCLE_MAX_SHARED_POOLS \
+	DIV_ROUND_UP(SKB_RECYCLE_MAX_PREALLOC_SKBS, \
+			SKB_RECYCLE_SPARE_MAX_SKBS)
+#else
+#define SKB_RECYCLE_MAX_SHARED_POOLS            8
+#endif
+
+#define SKB_RECYCLE_MAX_SHARED_POOLS_MASK \
 	(SKB_RECYCLE_MAX_SHARED_POOLS - 1)
 
 #ifdef CONFIG_SKB_RECYCLER_MULTI_CPU
