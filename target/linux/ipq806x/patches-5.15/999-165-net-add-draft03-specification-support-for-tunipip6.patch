From 071ad6259cbcecdb00c7b6ac394d5a7158652c22 Mon Sep 17 00:00:00 2001
From: Himanshu Joshi <himajosh@codeaurora.org>
Date: Fri, 24 Apr 2020 12:12:10 +0530
Subject: [PATCH] net: add draft03 specification support for tunipip6

draft03 of map-e is used in some environment, we add this supported

Change-Id: I81462632f0e6f2b5af0b1f8229c42572892c5972
Signed-off-by: Zhu Ken <guigenz@codeaurora.org>
---
 include/net/ip6_tunnel.h       |  1 +
 include/uapi/linux/if_tunnel.h |  1 +
 net/ipv6/ip6_tunnel.c          | 30 ++++++++++++++++++++++++++----
 3 files changed, 28 insertions(+), 4 deletions(-)

--- a/include/net/ip6_tunnel.h
+++ b/include/net/ip6_tunnel.h
@@ -37,6 +37,7 @@ struct __ip6_tnl_parm {
 	__u8 encap_limit;	/* encapsulation limit for tunnel */
 	__u8 hop_limit;		/* hop limit for tunnel */
 	bool collect_md;
+	__u8 draft03;		/* FMR using draft03 of map-e */
 	__be32 flowinfo;	/* traffic class and flowlabel for tunnel */
 	__u32 flags;		/* tunnel flags */
 	struct in6_addr laddr;	/* local tunnel end-point address */
--- a/include/uapi/linux/if_tunnel.h
+++ b/include/uapi/linux/if_tunnel.h
@@ -78,6 +78,7 @@ enum {
 	IFLA_IPTUN_COLLECT_METADATA,
 	IFLA_IPTUN_FWMARK,
 	IFLA_IPTUN_FMRS,
+	IFLA_IPTUN_DRAFT03,
 	__IFLA_IPTUN_MAX,
 };
 #define IFLA_IPTUN_MAX	(__IFLA_IPTUN_MAX - 1)
--- a/net/ipv6/ip6_tunnel.c
+++ b/net/ipv6/ip6_tunnel.c
@@ -842,7 +842,7 @@ EXPORT_SYMBOL_GPL(ip6_tnl_rcv_ctl);
  **/
 static void ip4ip6_fmr_calc(struct in6_addr *dest,
 		const struct iphdr *iph, const uint8_t *end,
-		const struct __ip6_tnl_fmr *fmr, bool xmit)
+		const struct __ip6_tnl_fmr *fmr, bool xmit, bool draft03)
 {
 	int psidlen = fmr->ea_len - (32 - fmr->ip4_prefix_len);
 	u8 *portp = NULL;
@@ -930,10 +930,27 @@ static void ip4ip6_fmr_calc(struct in6_a
 			<< (64 - fmr->ea_len - fromrem));
 		t = cpu_to_be64(t | (eabits >> fromrem));
 		memcpy(&dest->s6_addr[frombyte], &t, bytes);
+		if (draft03) {
+			/**
+			 * Draft03 IPv6 address format
+			 * +--+---+---+---+---+---+---+---+---+
+			 * |PL|   8  16  24  32   40  48  56  |
+			 * +--+---+---+---+---+---+---+---+---+
+			 * |64| u | IPv4 address  |PSID   |0  |
+			 * +--+---+---+---+---+---+---+---+---+
+			 * Final specification IPv6 address format
+			 * +--+---+---+---+---+---+---+---+---+
+			 * |PL|   8  16  24  32   40  48  56  |
+			 * +--+---+---+---+---+---+---+---+---+
+			 * |64|   0   | IPv4 address  |PSID   |
+			 * +--+---+---+---+---+---+---+---+---+
+			 * We need move last six Bytes 1 byte forward
+			 */
+			memmove(&dest->s6_addr[9], &dest->s6_addr[10], 6);
+		}
 	}
 }
 
-
 static int __ip6_tnl_rcv(struct ip6_tnl *tunnel, struct sk_buff *skb,
 			 const struct tnl_ptk_info *tpi,
 			 struct metadata_dst *tun_dst,
@@ -1014,7 +1031,8 @@ static int __ip6_tnl_rcv(struct ip6_tnl
 			/* Check that IPv6 matches IPv4 source to prevent spoofing */
 			if (fmr)
 				ip4ip6_fmr_calc(&expected, ip_hdr(skb),
-						skb_tail_pointer(skb), fmr, false);
+						skb_tail_pointer(skb), fmr, false,
+						tunnel->parms.draft03);
 
 			if (!ipv6_addr_equal(&ipv6h->saddr, &expected)) {
 				rcu_read_unlock();
@@ -1565,7 +1583,8 @@ ipxip6_tnl_xmit(struct sk_buff *skb, str
 
 	/* change dstaddr according to FMR */
 	if (fmr)
-		ip4ip6_fmr_calc(&fl6.daddr, ip_hdr(skb), skb_tail_pointer(skb), fmr, true);
+		ip4ip6_fmr_calc(&fl6.daddr, ip_hdr(skb), skb_tail_pointer(skb), fmr,
+				true, t->parms.draft03);
 
 	if (iptunnel_handle_offloads(skb, SKB_GSO_IPXIP6))
 		return -1;
@@ -2200,6 +2219,9 @@ static void ip6_tnl_netlink_parms(struct
 	if (data[IFLA_IPTUN_FWMARK])
 		parms->fwmark = nla_get_u32(data[IFLA_IPTUN_FWMARK]);
 
+	if (data[IFLA_IPTUN_DRAFT03])
+		parms->draft03 = nla_get_u8(data[IFLA_IPTUN_DRAFT03]);
+
 	if (data[IFLA_IPTUN_FMRS]) {
 		unsigned rem;
 		struct nlattr *fmr;
