From ae7efc5aa1864bc17225c466f196fcdb7d81db57 Mon Sep 17 00:00:00 2001
From: Tian Yang <tiany@codeaurora.org>
Date: Mon, 21 Jan 2019 19:54:08 -0800
Subject: [PATCH] skb_recycler: Adjust SKB truesize as needed buffer size

Change-Id: I131f60e0e74627c4db916faaff76dc4fc3232996
Signed-off-by: Casey Chen <kexinc@codeaurora.org>
---
 net/core/skbuff.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -495,8 +495,14 @@ struct sk_buff *__netdev_alloc_skb(struc
 
 #ifdef CONFIG_SKB_RECYCLER
 	skb = skb_recycler_alloc(dev, length);
-	if (likely(skb))
+	if (likely(skb)) {
+		/* SKBs in the recycler are from various unknown sources.
+		 * Their truesize is unknown. We should set truesize
+		 * as the needed buffer size before using it.
+		 */
+		skb->truesize = SKB_TRUESIZE(SKB_DATA_ALIGN(len + NET_SKB_PAD));
 		return skb;
+	}
 
 	len = SKB_RECYCLE_SIZE;
 	if (unlikely(length > SKB_RECYCLE_SIZE))
@@ -506,6 +512,13 @@ struct sk_buff *__netdev_alloc_skb(struc
 			  SKB_ALLOC_RX, NUMA_NO_NODE);
 	if (!skb)
 		goto skb_fail;
+
+	/* Set truesize as the needed buffer size
+	 * rather than the allocated size by __alloc_skb().
+	 */
+	if (length + NET_SKB_PAD < SKB_WITH_OVERHEAD(PAGE_SIZE))
+		skb->truesize = SKB_TRUESIZE(SKB_DATA_ALIGN(length + NET_SKB_PAD));
+
 	goto skb_success;
 #else
 	len += NET_SKB_PAD;
