From fbaa13497d95ad8dd9271a654c70309889f089ac Mon Sep 17 00:00:00 2001
From: Kathiravan T <kathirav@codeaurora.org>
Date: Thu, 29 Apr 2021 16:29:02 +0530
Subject: [PATCH] net: skbuff: cache for skb->data for LM profiles

Signed-off-by: Kathiravan T <kathirav@codeaurora.org>
Change-Id: I7bcac8d05a11aa3d1a9e015d6530562ed81477a0
---
 net/core/skbuff.c | 31 +++++++++++++++++++++++++++++--
 1 file changed, 29 insertions(+), 2 deletions(-)

diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 6fc5a28c8441..14079a4bd8f6 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -86,6 +86,12 @@
 #include "skbuff_recycle.h"
 #include "skbuff_debug.h"
 
+
+#if defined(CONFIG_SKB_FIXED_SIZE_2K) && !defined(__LP64__)
+struct kmem_cache *skb_data_cache;
+#define SKB_DATA_CACHE_SIZE	2176
+#endif
+
 struct kmem_cache *skbuff_head_cache __ro_after_init;
 static struct kmem_cache *skbuff_fclone_cache __ro_after_init;
 #ifdef CONFIG_SKB_EXTENSIONS
@@ -358,7 +364,15 @@ static void *__kmalloc_reserve(size_t size, gfp_t flags, int node,
 	 * Try a regular allocation, when that fails and we're not entitled
 	 * to the reserves, fail.
 	 */
-	obj = kmalloc_node_track_caller(size,
+
+#if defined(CONFIG_SKB_FIXED_SIZE_2K) && !defined(__LP64__)
+	if (size > SZ_2K && size <= SKB_DATA_CACHE_SIZE)
+		obj = kmem_cache_alloc_node(skb_data_cache,
+						flags | __GFP_NOMEMALLOC | __GFP_NOWARN,
+						node);
+	else
+#endif
+		obj = kmalloc_node_track_caller(size,
 					flags | __GFP_NOMEMALLOC | __GFP_NOWARN,
 					node);
 	if (obj || !(gfp_pfmemalloc_allowed(flags)))
@@ -366,7 +380,12 @@ static void *__kmalloc_reserve(size_t size, gfp_t flags, int node,
 
 	/* Try again but now we are using pfmemalloc reserves */
 	ret_pfmemalloc = true;
-	obj = kmalloc_node_track_caller(size, flags, node);
+#if defined(CONFIG_SKB_FIXED_SIZE_2K) && !defined(__LP64__)
+	if (size > SZ_2K && size <= SKB_DATA_CACHE_SIZE)
+		obj = kmem_cache_alloc_node(skb_data_cache, flags, node);
+	else
+#endif
+		obj = kmalloc_node_track_caller(size, flags, node);
 
 out:
 	if (pfmemalloc)
@@ -4635,6 +4654,14 @@ static void skb_extensions_init(void) {}
 
 void __init skb_init(void)
 {
+
+#if defined(CONFIG_SKB_FIXED_SIZE_2K) && !defined(__LP64__)
+	skb_data_cache = kmem_cache_create_usercopy("skb_data_cache",
+						SKB_DATA_CACHE_SIZE,
+						0, 0, 0, SKB_DATA_CACHE_SIZE,
+						NULL);
+#endif
+
 	skbuff_head_cache = kmem_cache_create_usercopy("skbuff_head_cache",
 					      sizeof(struct sk_buff),
 					      0,
-- 
2.44.0

