--- a/src/hsl/phy/qca808x_phy.c
+++ b/src/hsl/phy/qca808x_phy.c
@@ -299,7 +299,7 @@
 	phy_data = qca808x_phy_debug_read(dev_id, phy_id,
 		QCA808X_DEBUG_LOCAL_SEED);
 	phy_data &= ~(QCA808X_MASTER_SLAVE_SEED_CFG);
-	phy_data |= (prandom_u32()%QCA808X_MASTER_SLAVE_SEED_RANGE) << 2;
+	phy_data |= (get_random_u32()%QCA808X_MASTER_SLAVE_SEED_RANGE) << 2;
 	SSDK_DEBUG("QCA808X_DEBUG_LOCAL_SEED:%x\n", phy_data);
 	rv = qca808x_phy_debug_write(dev_id, phy_id,
 		QCA808X_DEBUG_LOCAL_SEED, phy_data);
--- a/src/init/ssdk_init.c
+++ b/src/init/ssdk_init.c
@@ -1449,7 +1449,7 @@
 			SSDK_ERROR("gpio request faild \n");
 			return -1;
 		}
-		gpio_set_debounce(gpio_num, 60000);
+		gpiod_set_debounce(gpio_to_desc(gpio_num), 60000);
 	}
 	else
 	{

--- a/src/sal/sd/linux/uk_interface/sw_api_ks_ioctl.c
+++ b/src/sal/sd/linux/uk_interface/sw_api_ks_ioctl.c
@@ -53,13 +53,8 @@
 switch_close(struct inode * inode, struct file * file);
 
 
-#ifdef KVER32      //for linux3.2
 static long
 switch_ioctl(struct file * file, unsigned int cmd, unsigned long arg);
-#else
-static long
-switch_ioctl(struct inode *inode, struct file * file, unsigned int cmd, unsigned long arg);
-#endif
 
 static unsigned long *cmd_buf = NULL;
 
@@ -237,13 +232,8 @@
     return SW_OK;
 }
 
-#ifdef KVER32
 static long
 switch_ioctl(struct file * file, unsigned int cmd, unsigned long arg)
-#else
-static long
-switch_ioctl(struct inode *inode, struct file * file, unsigned int cmd, unsigned long arg)
-#endif
 {
     unsigned long args[SW_MAX_API_PARAM], rtn;
     sw_error_t rv = SW_NO_RESOURCE;
