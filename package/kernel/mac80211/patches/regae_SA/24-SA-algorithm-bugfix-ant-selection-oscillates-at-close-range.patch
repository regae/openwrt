From 8d546ad3f78fb57fc64838c656791a653ab20fb4 Mon Sep 17 00:00:00 2001
From: oliverwen <oliverwen@google.com>
Date: Wed, 13 Jul 2016 17:29:15 -0700
Subject: [PATCH] CHROMIUM: smart antenna algorithm: bugfix: ant selection
 oscillates at close range

 - fix the bug in ant switching logic caused by missing curly braces

TEST=print out ant selection at close range attenuation, in cabled test,
the ant combination selected by sa should always be the ant combination
that is cabled.

BUG=chrome-os-partner:51964
CQ-DEPEND=CL:341559

Signed-off-by: oliverwen <oliverwen@google.com>
(cherry picked from commit a363775d659ac633607ddc2e640520ab4ab982b2)
(source: wireless-3.18)

Change-Id: Ifecef36da4028d5812ab83ed803e53b3d5477876
Reviewed-on: https://chromium-review.googlesource.com/341560
Commit-Ready: Yixiang Li <yixiang@google.com>
Tested-by: Oliver Wen <oliverwen@chromium.org>
Reviewed-by: Yixiang Li <yixiang@google.com>
---
 drivers/net/wireless/ath/ath10k/smart_ant.c | 13 +++++++------
 3 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/drivers/net/wireless/ath/ath10k/smart_ant.c b/drivers/net/wireless/ath/ath10k/smart_ant.c
index eef908e1c8e..24a0d7d2984 100644
--- a/drivers/net/wireless/ath/ath10k/smart_ant.c
+++ b/drivers/net/wireless/ath/ath10k/smart_ant.c
@@ -828,7 +828,7 @@ static u8 smart_ant_proc_train_stats(struct ath10k *ar,
 			per_diff = per < tstats->per ?
 				(tstats->per - per) : (per - tstats->per);
 			if (tstats->rate == tstats->last_rate &&
-			    per_diff <= sparams->per_diff_threshold)
+			    per_diff <= sparams->per_diff_threshold) {
 				switch_ant = smart_ant_sec_metric(sa_sta);
 
 				if (ar->smart_ant_info.debug_level >=
@@ -842,8 +842,8 @@ static u8 smart_ant_proc_train_stats(struct ath10k *ar,
 					    per_diff,
 					    sparams->per_diff_threshold);
 				}
-			else if (tstats->rate == tstats->last_rate &&
-				 per < tstats->per)
+			} else if (tstats->rate == tstats->last_rate &&
+				   per < tstats->per) {
 				switch_ant = true;
 
 				if (ar->smart_ant_info.debug_level >=
@@ -855,6 +855,7 @@ static u8 smart_ant_proc_train_stats(struct ath10k *ar,
 					    tstats->last_rate,
 					    per, tstats->per);
 				}
+			}
 		}
 
 		if (switch_ant) {
@@ -1858,9 +1859,9 @@ int ath10k_smart_ant_set_default(struct ath10k *ar,
 	if (arvif->vdev_type != WMI_VDEV_TYPE_AP ||
 	    arvif->vdev_subtype != WMI_VDEV_SUBTYPE_NONE) {
 		if (ar->smart_ant_info.debug_level >=
-		    ATH10K_SMART_ANT_DBG_LVL_TOP_DECISION) {
+			ATH10K_SMART_ANT_DBG_LVL_TOP_DECISION) {
 			ath10k_dbg(ar, ATH10K_DBG_SMART_ANT,
-				   "Smart antenna logic not enabled for non-AP interface\n");
+			"Smart antenna logic not enabled for non-AP interface\n");
 		}
 		return 0;
 	}
@@ -1936,7 +1937,7 @@ int ath10k_smart_ant_enable(struct ath10k *ar, struct ath10k_vif *arvif)
 		if (ar->smart_ant_info.debug_level >=
 		    ATH10K_SMART_ANT_DBG_LVL_TOP_DECISION) {
 			ath10k_dbg(ar, ATH10K_DBG_SMART_ANT,
-				   "Smart antenna logic not enabled for non-AP interface\n");
+			"Smart antenna logic not enabled for non-AP interface\n");
 		}
 		return 0;
 	}
-- 
2.43.0

