--- a/exports/nss_dtlsmgr.h
+++ b/exports/nss_dtlsmgr.h
@@ -100,7 +100,7 @@ struct nss_dtlsmgr_crypto_data {
  * NSS DTLS manager cryptographic structure to represent key and its length.
  */
 struct nss_dtlsmgr_crypto_data {
-	const uint8_t *data;		/**< Pointer to key or nonce. */
+	uint8_t *data;			/**< Pointer to key or nonce. */
 	uint16_t len;			/**< Length of the key. */
 };
 
--- a/bridge/nss_bridge_mgr_ovs.c
+++ b/bridge/nss_bridge_mgr_ovs.c
@@ -118,7 +118,9 @@
 		nss_bridge_mgr_trace("%px: VLAN = %d, add on port %s, bridge %s\n",
 				b_pvt, vlan->vh.h_vlan_TCI, dev->name, master_dev->name);
 
+#if defined(NSS_BRIDGE_MGR_PPE_SUPPORT)
 		nss_vlan_mgr_add_vlan_rule(dev, b_pvt->vsi, vlan->vh.h_vlan_TCI);
+#endif
 		return;
 	}
 
@@ -127,7 +129,9 @@
 	 */
 	nss_bridge_mgr_trace("%px: VLAN = %d, delete on port %s, bridge %s\n",
 					b_pvt, vlan->vh.h_vlan_TCI, dev->name, master_dev->name);
+#if defined(NSS_BRIDGE_MGR_PPE_SUPPORT)
 	nss_vlan_mgr_del_vlan_rule(dev, b_pvt->vsi, vlan->vh.h_vlan_TCI);
+#endif
 }
 
 /*
