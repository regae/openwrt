--- a/ipq806x/include/msm_nss_gmac.h
+++ b/ipq806x/include/msm_nss_gmac.h
@@ -317,7 +317,7 @@ struct msm_nss_gmac_platform_data {
 	uint32_t phy_mdio_addr;		/* MDIO address of the connected PHY */
 	uint32_t poll_required;		/* [0/1] Link status poll? */
 	uint32_t rgmii_delay;
-	uint32_t phy_mii_type;
+	phy_interface_t phy_mii_type;
 	uint8_t  mac_addr[6];
 	int32_t forced_speed;		/* Forced speed. Values used from
 					   ethtool.h. 0 = Speed not forced */
--- a/ipq806x/include/nss_gmac_dev.h
+++ b/ipq806x/include/nss_gmac_dev.h
@@ -234,7 +234,7 @@ struct nss_gmac_dev {
 	uint32_t duplex_mode;	/* Duplex mode of the Phy                     */
 	uint32_t speed;		/* Speed of the Phy                           */
 	uint32_t loop_back_mode;/* Loopback status of the Phy                 */
-	uint32_t phy_mii_type;	/* RGMII/SGMII/QSGMII                         */
+	phy_interface_t phy_mii_type;	/* RGMII/SGMII/QSGMII                         */
 	uint32_t rgmii_delay;	/* RGMII delay settings                       */
 	uint32_t pause;		/* Current flow control settings              */
 	uint32_t first_linkup_done;	/* when set, it indicates that first
--- a/ipq806x/nss_gmac_ctrl.c
+++ b/ipq806x/nss_gmac_ctrl.c
@@ -997,9 +997,6 @@ static int32_t nss_gmac_of_get_pdata(str
 {
 	struct nss_gmac_dev *gmacdev = (struct nss_gmac_dev *)netdev_priv(netdev);
 	struct resource memres_devtree = {0};
-	phy_interface_t phyif = 0;
-
-
 
 	if (of_property_read_u32(np, "qcom,id", &gmacdev->macid)
 		|| of_property_read_u32(np, "qcom,phy-mdio-addr",
@@ -1025,7 +1022,7 @@ static int32_t nss_gmac_of_get_pdata(str
 
 	of_property_read_u32(np, "qcom,aux-clk-freq", &gmacdev->aux_clk_freq);
 
-	gmaccfg->phy_mii_type = of_get_phy_mode(np, &phyif);
+	of_get_phy_mode(np, &gmaccfg->phy_mii_type);
 	netdev->irq = irq_of_parse_and_map(np, 0);
 	if (!netdev->irq) {
 		pr_err("%s: Can't map interrupt\n", np->name);
@@ -1488,8 +1485,8 @@ static int32_t nss_gmac_probe(struct pla
 	netdev_change_features(netdev);
 	rtnl_unlock();
 
-	netdev_info(netdev, "Initialized NSS GMAC%d interface %s: (base = 0x%lx, irq = %d, PhyId = %d, PollLink = %d)\n"
-			, gmacdev->macid, netdev->name, netdev->base_addr
+	netdev_info(netdev, "Initialized NSS GMAC%d mode: %s, interface %s: (base = 0x%lx, irq = %d, PhyId = %d, PollLink = %d)\n"
+			, gmacdev->macid, phy_modes(gmacdev->phy_mii_type), netdev->name, netdev->base_addr
 			, netdev->irq, gmacdev->phy_base
 			, test_bit(__NSS_GMAC_LINKPOLL, &gmacdev->flags));
 
--- a/ipq806x/nss_gmac_init.c
+++ b/ipq806x/nss_gmac_init.c
@@ -940,6 +940,8 @@ void nss_gmac_dev_init(struct nss_gmac_d
 	case PHY_INTERFACE_MODE_QSGMII:
 		div = clk_div_qsgmii(gmacdev);
 		break;
+	default:
+		netdev_err(gmacdev->netdev, "NO interface defined!\n");
 	}
 	val = nss_gmac_read_reg(nss_base, NSS_ETH_CLK_DIV0);
 	val &= ~GMACn_CLK_DIV(id, GMACn_CLK_DIV_SIZE);
